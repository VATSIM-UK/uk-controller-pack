name: Test Changes-Only ZIP (HEAD vs Latest Release)

on:
  workflow_dispatch:

jobs:
  test-changes-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout full repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for git diff against tags

    - name: Compare HEAD vs latest release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        repo="${{ github.repository }}"
        
        # Get latest release tag
        latest_tag=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$repo/releases/latest" | jq -r .tag_name)

        echo "üßæ Comparing HEAD to $latest_tag"
        mkdir -p changes_only

        # Get changed files between latest tag and HEAD
        mapfile -t file_list < <(git diff --name-only "$latest_tag" HEAD)

        echo "üìù Changed files:"
        printf '%s\n' "${file_list[@]}"

        # Always try to include the README
        cp _docs/README.pdf changes_only/README.pdf 2>/dev/null || echo "‚ö† README.pdf not found"

        for file in "${file_list[@]}"; do
          echo "::group::Checking $file"
          if [[ "$file" == UK/* || "$file" == "_docs/README.pdf" ]]; then
            if [ -f "$file" ]; then
              echo "‚úî Including: $file"
              mkdir -p "changes_only/$(dirname "$file")"
              cp "$file" "changes_only/$file"
            else
              echo "‚ö† Listed but missing in checkout: $file"
            fi
          else
            echo "‚è≠ Skipped: $file"
          fi
          echo "::endgroup::"
        done

        echo "üì¶ Final contents:"
        find changes_only -type f

        if [ -z "$(find changes_only -type f)" ]; then
          echo "‚ö† No valid files to zip."
          exit 0
        fi

        cd changes_only
        zip -r ../changes_only_test.zip .
        cd ..

    - name: Upload ZIP Artifact
      uses: actions/upload-artifact@v4
      with:
        name: changes-only-zip
        path: changes_only_test.zip
