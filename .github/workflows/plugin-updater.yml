name: Check For Plugin Releases

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 02:00 UTC
  workflow_dispatch:

jobs:
  check-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Detect new plugin releases and create issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPOS=(
            "AliceFord/vSMR"
            "KingfuChan/RDF"
            "VATSIMCanada/Slots-Plugin"
            "rpuig2001/CDM"
            "DrFreas/VCH"
            "quassbutreally/EuroScope-CCDS-R"
          )

          VERSION_FILE=".github/dependency_versions.json"
          [ -f "$VERSION_FILE" ] || echo "{}" > "$VERSION_FILE"

          for repo in "${REPOS[@]}"; do
            latest_tag=$(curl -s "https://api.github.com/repos/$repo/releases/latest" | jq -r '.tag_name // empty')
            [ -z "$latest_tag" ] && latest_tag="v0.0.0"

            prev_tag=$(jq -r --arg repo "$repo" '.[$repo] // "v0.0.0"' "$VERSION_FILE")

            if [ "$latest_tag" != "$prev_tag" ] && [ "$latest_tag" != "v0.0.0" ]; then
              echo "New release detected for $repo: $latest_tag"

              gh issue create \
                --title "Incorporate $repo $latest_tag" \
                --body "A new release of [$repo](https://github.com/$repo/releases/tag/$latest_tag) has been published.\n\nIncorporate the relevant DLL and raise a PR that updates:\n\n- \`.github/dependency_versions.json\`\n\nEnsure to read the changelog for the updated plugin and make any applicable configuration changes." \
                --label dependencies || echo "Issue may already exist"
            else
              echo "No update needed for $repo ($prev_tag)"
            fi
          done
